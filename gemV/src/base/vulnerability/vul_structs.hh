/*
 * Copyright (c) 20014-15 Arizona State University
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met: redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer;
 * redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution;
 * neither the name of the copyright holders nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Srinivas Tanikella
 *
 *	    Compiler and Microarchitecture Lab, ASU
 * 	    http://aviral.lab.asu.edu
 */

#ifndef __VUL_STRUCTS_HH__
#define __VUL_STRUCTS_HH__

#include "base/statistics.hh"
#include "base/vulnerability/vul_main.hh"
#include "cpu/inst_seq.hh"

#include <list>
#include <utility>
#include <map>

enum InstField {
    INST_OPCODE,
    INST_PC,
    INST_TID,
    INST_ARCHDESTREGSIDX,
    INST_ARCHSRCREGSIDX,
    INST_PHYDESTREGSIDX,
    INST_PHYSRCREGSIDX,
    INST_SEQNUM,
    INST_PREDPC,
    INST_FLAGS,
    INST_FAULT,
    INST_MEMDATA
};

enum PipeStruct {
    P_FETCHQ,
    P_DECODEQ,
    P_RENAMEQ,
    P_I2EQ,
    P_IEWQ,
    P_IQ,
    P_LSQ
};

typedef std::list<std::pair<long, long>> VulIntervals;

struct Field {

    InstField f;
    int size;
    int regIdx;
    std::map<InstSeqNum, History> hist;

    std::map<InstSeqNum, VulIntervals> vulIntervals;  //For debug and FI purposes
    unsigned long vul;
    std::string name;
    int reads;
    int writes;

};


struct pStructure {

    std::string name;

    PipeStruct s;

    std::list<Field> fields;

    Stats::Scalar vul;

}; 


#endif //__VUL_STRUCTS_HH__
